// <auto-generated />
using System;
using Accompany_consulting.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Accompany_consulting.Migrations
{
    [DbContext(typeof(ConsultantContext))]
    [Migration("20230814131044_updatedure")]
    partial class updatedure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Accompany_consulting.Models.Candidat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Competance")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("CvPdf")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Tel2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("candidat");
                });

            modelBuilder.Entity("Accompany_consulting.Models.Conge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("Demandeur")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Validateur")
                        .HasColumnType("int");

                    b.Property<double>("duree")
                        .HasColumnType("float");

                    b.Property<string>("etat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conge");
                });

            modelBuilder.Entity("Accompany_consulting.Models.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Business_unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_integration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_naissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fonction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Societe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoldeConge")
                        .HasColumnType("int");

                    b.Property<int>("SoldeMaladie")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salaire")
                        .HasColumnType("int");

                    b.Property<string>("situation_amoureuse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consultants");
                });

            modelBuilder.Entity("Accompany_consulting.Models.Entretient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Candidat")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionPoste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Recruteur")
                        .HasColumnType("int");

                    b.Property<int>("RecruteurSuivant")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("traite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("valid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("entretien");
                });

            modelBuilder.Entity("Accompany_consulting.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdmC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdmRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommunicationC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommunicationInterne")
                        .HasColumnType("int");

                    b.Property<string>("CommunicationRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Communication_interne_com")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_evaluation")
                        .HasColumnType("datetime2");

                    b.Property<string>("DevCommercialC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DevCommercialRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EspritEquipeC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EspritEquipeRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Formation")
                        .HasColumnType("int");

                    b.Property<string>("Formation_com")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hr")
                        .HasColumnType("int");

                    b.Property<int?>("Outils")
                        .HasColumnType("int");

                    b.Property<string>("Outils_com")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessRH")
                        .HasColumnType("int");

                    b.Property<string>("ProcessRH_com")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessusR")
                        .HasColumnType("int");

                    b.Property<string>("ProcessusR_com")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjetInterneC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjetInterneRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pt24")
                        .HasColumnType("int");

                    b.Property<string>("Pt24_com")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rapport")
                        .HasColumnType("int");

                    b.Property<string>("Rapport_com")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Relation")
                        .HasColumnType("int");

                    b.Property<string>("Relation_com")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VieCabinetC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VieCabinetRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("consultant")
                        .HasColumnType("int");

                    b.Property<string>("suggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_eval")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Evaluation");
                });

            modelBuilder.Entity("Accompany_consulting.Models.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Consultant")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_fin")
                        .HasColumnType("datetime2");

                    b.Property<int>("Manager")
                        .HasColumnType("int");

                    b.Property<int>("nbeval")
                        .HasColumnType("int");

                    b.Property<string>("titre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mission");
                });

            modelBuilder.Entity("Accompany_consulting.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Accompany_consulting.Models.eval__mensuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Budge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Consultant")
                        .HasColumnType("int");

                    b.Property<string>("Delai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Manager")
                        .HasColumnType("int");

                    b.Property<int>("Mission")
                        .HasColumnType("int");

                    b.Property<string>("Qualite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nbeval")
                        .HasColumnType("int");

                    b.Property<string>("perimetre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("eval__mensuel");
                });

            modelBuilder.Entity("Accompany_consulting.Models.eval_competance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date_evaluation")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hr")
                        .HasColumnType("int");

                    b.Property<int>("consultant")
                        .HasColumnType("int");

                    b.Property<string>("contrat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("decision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("notefinal")
                        .HasColumnType("int");

                    b.Property<int>("notemissions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("eval_competance");
                });

            modelBuilder.Entity("Accompany_consulting.Models.eval_mission_integration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChargeC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Consultant")
                        .HasColumnType("int");

                    b.Property<string>("FeedbackManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Manager")
                        .HasColumnType("int");

                    b.Property<int>("Mission")
                        .HasColumnType("int");

                    b.Property<int?>("NoteManager")
                        .HasColumnType("int");

                    b.Property<string>("RelationClientC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationClientRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatisficationC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatisficationRH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("evaluation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("eval_Mission_Integrations");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Accompany_consulting.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Accompany_consulting.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Accompany_consulting.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Accompany_consulting.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
